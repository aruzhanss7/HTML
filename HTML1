import React, { useState, useEffect } from "react";

const Timer = () => {
  const [time, setTime] = useState(0);
  const [isRunning, setIsRunning] = useState(false);

  useEffect(() => {
    let timer;
    if (isRunning) {
      timer = setInterval(() => {
        setTime((prevTime) => prevTime + 1);
      }, 1000);
    } else {
      clearInterval(timer);
    }
    return () => clearInterval(timer);
  }, [isRunning]);

  const formatTime = (seconds) => {
    const hrs = String(Math.floor(seconds / 3600)).padStart(2, "0");
    const mins = String(Math.floor((seconds % 3600) / 60)).padStart(2, "0");
    const secs = String(seconds % 60).padStart(2, "0");
    return `${hrs}:${mins}:${secs}`;
  };

  return (
    <div style={styles.container}>
      <h1 style={styles.time}>{formatTime(time)}</h1>
      <button onClick={() => setIsRunning(!isRunning)} style={styles.button}>
        {isRunning ? "Стоп" : "Старт"}
      </button>
      {time > 0 && (
        <button onClick={() => { setTime(0); setIsRunning(false); }} style={styles.button}>
          Сброс
        </button>
      )}
    </div>
  );
};

const styles = {
  container: {
    display: "flex",
    flexDirection: "column",
    alignItems: "center",
    justifyContent: "center",
    height: "100vh",
    fontFamily: "Arial, sans-serif",
  },
  time: {
    fontSize: "48px",
    fontWeight: "bold",
    marginBottom: "20px",
  },
  button: {
    fontSize: "20px",
    padding: "10px 20px",
    margin: "10px",
    cursor: "pointer",
  },
};

export default Timer;
